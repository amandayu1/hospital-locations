<<<<<<< HEAD
[{"C:\\Users\\Amanda Yu\\Documents\\VS Code Projects\\hospital-locations\\src\\index.js":"1","C:\\Users\\Amanda Yu\\Documents\\VS Code Projects\\hospital-locations\\src\\App.js":"2","C:\\Users\\Amanda Yu\\Documents\\VS Code Projects\\hospital-locations\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":1610244408169,"results":"4","hashOfConfig":"5"},{"size":6491,"mtime":1610878038178,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1610244408169,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k22zje",{"filePath":"10","messages":"11","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Amanda Yu\\Documents\\VS Code Projects\\hospital-locations\\src\\index.js",[],"C:\\Users\\Amanda Yu\\Documents\\VS Code Projects\\hospital-locations\\src\\App.js",["15","16","17","18","19","20","21","22","23","24"],"import './App.css';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst List = () => {\r\n  return(\r\n      <ol>\r\n          <h3>Recommended Locations</h3>\r\n          <li>\r\n            <lead>North York General Hospital</lead>\r\n            <p>4001 Leslie St, North York</p>\r\n          </li>\r\n          <li>\r\n            <lead>Markham Stouffville Hospital</lead>\r\n            <p>381 Church St, Markham</p>\r\n          </li>\r\n          <li>\r\n            <lead>Sunnybrook Hospital</lead>\r\n            <p>2075 Bayview Ave, Toronto</p>\r\n          </li>\r\n          <li>\r\n            <lead>Scarborough General Hospital</lead>\r\n            <p>3050 Lawrence Ave E, Scarborough</p>\r\n          </li>\r\n        </ol>\r\n  )\r\n\r\n}\r\n\r\n\r\n  const App = () => {\r\n  const [userAddress, setUserAddress] = useState(\"\");\r\n  const [coordinates, setCoordinates] = useState({ latitude: \"43.793607699999995\", longitude: \"-79.3284823\" });\r\n  const [isAddressVisible, setAddressVisiblitly] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(coordinates.latitude + \"\" + coordinates.longitude)\r\n    getUserAddress();\r\n    getHospitalInfo();\r\n  }, [coordinates])\r\n\r\n  const getLocation = async () => {\r\n\r\n    if (navigator.geolocation) {\r\n      // navigator.geolocation.getCurrentPosition(getCoordinates, handelLocationError);\r\n\r\n      await navigator.geolocation.getCurrentPosition((position) => {\r\n        setCoordinates({\r\n          latitude: position.coords.latitude,\r\n          longitude: position.coords.longitude,\r\n        });\r\n\r\n        setAddressVisiblitly(true);\r\n      });\r\n\r\n    } else\r\n      alert(\"Geolocation is not supported by this browser.\");\r\n  }\r\n\r\n  const getUserAddress = async () => {\r\n    const response = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${coordinates.latitude},${coordinates.longitude}&key=AIzaSyDu4BYAiI5YwgKcxGaoPxElCcbQZSy1OK8`);\r\n    const data = await response.json();\r\n    setUserAddress(data.results[0].formatted_address);\r\n  }\r\n\r\n  const getHospitalInfo = async () => {\r\n    // https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=43.793607699999995,-79.3284823&radius=10000&type=hospital&keyword=hospital&name=hospital&key=AIzaSyDu4BYAiI5YwgKcxGaoPxElCcbQZSy1OK8\r\n    \r\n    const response = await fetch(`https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=43.793607699999995,-79.3284823&radius=10000&type=hospital&keyword=hospital&name=hospital&key=AIzaSyDu4BYAiI5YwgKcxGaoPxElCcbQZSy1OK8`);\r\n    const data = await response.json();\r\n    console.log(data);\r\n    \r\n    \r\n    // function logResult(result) {\r\n    //   console.log(result);\r\n    // }\r\n    \r\n    // function logError(error) {\r\n    //   console.log('Looks like there was a problem: \\n', error);\r\n    // }\r\n    \r\n    // function validateResponse(response) {\r\n    //   if (!response.ok) {\r\n    //     console.log('cookies');\r\n    //     throw Error(response.statusText);\r\n    //   }\r\n    //   console.log('bookies');\r\n    //   return response;\r\n    // }\r\n    \r\n    // function readResponseAsJSON(response) {\r\n    //   return response.json();\r\n    // }\r\n    \r\n    // function fetchJSON(pathToResource) {\r\n    //   var myHeaders = new Headers({\r\n    //     'Content-Type': 'text/plain',\r\n    //     'Access-Control-Allow-Origin': '*'\r\n    //   });\r\n\r\n    //   fetch(pathToResource, {\r\n    //     // mode: 'no-cors',\r\n    //     headers: myHeaders\r\n    //   }) // 1\r\n    //   .then(validateResponse) // 2\r\n    //   .then(readResponseAsJSON) // 3\r\n    //   .then(logResult) // 4\r\n    //   .catch(logError);\r\n    // }\r\n    \r\n    // fetchJSON('https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=43.793607699999995,-79.3284823&radius=10000&type=hospital&keyword=hospital&name=hospital&key=AIzaSyDu4BYAiI5YwgKcxGaoPxElCcbQZSy1OK8');\r\n  }\r\n\r\n  const handelLocationError = (error) => {\r\n    switch (error.code) {\r\n      case error.PERMISSION_DENIED:\r\n        alert(\"User denied the request for Geolocation.\")\r\n        break;\r\n      case error.POSITION_UNAVAILABLE:\r\n        alert(\"Location information is unavailable.\")\r\n        break;\r\n      case error.TIMEOUT:\r\n        alert(\"The request to get user location timed out.\")\r\n        break;\r\n      case error.UNKNOWN_ERROR:\r\n        alert(\"An unknown error occurred.\")\r\n        break;\r\n      default:\r\n        alert(\"An unknown error occured.\")\r\n    }\r\n  }\r\n\r\n  const [loc1, setLoc1] = useState({\r\n    latitude: `${coordinates.latitude-0.02}`,\r\n    longitude: `${coordinates.latitude -0.05}`\r\n  });\r\n  const [loc2, setLoc2] = useState({\r\n    latitude: `${coordinates.latitude }`,\r\n    longitude: `${coordinates.latitude -0.1}`\r\n  });\r\n  const [loc3, setLoc3] = useState({\r\n    latitude: `${coordinates.latitude -0.06}`,\r\n    longitude: `${coordinates.latitude -0.09}`\r\n  });\r\n  const [loc4, setLoc4] = useState({\r\n    latitude: `${coordinates.latitude - 0.1}`,\r\n    longitude: `${coordinates.latitude}`\r\n  });\r\n\r\n  return (\r\n    <div className=\"Map\">\r\n      <h2>\r\n        Find the Nearest Hospital\r\n      </h2>\r\n\r\n      <button className=\"button\" onClick={() => getLocation()}>Locate Me</button>\r\n      <h4>Your Coordinates</h4>\r\n      \r\n      <p>Latitude: {isAddressVisible ? coordinates.latitude: null}</p>\r\n      <p>Longitude: {isAddressVisible ? coordinates.longitude: null}</p>\r\n      <p>Address: {isAddressVisible ? userAddress  : \"\"}</p>\r\n      \r\n      {isAddressVisible ? <List />  : null}\r\n    \r\n      {isAddressVisible ?\r\n      <img src={`https://maps.googleapis.com/maps/api/staticmap?&zoom=11&size=512x512&maptype=roadmap\\\r\n      &markers=size:small%7Ccolor:blue%7C${coordinates.latitude-0.01},${coordinates.longitude-0.02}\r\n      &markers=color:0xE26F6F%7Clabel:1%7C${coordinates.latitude-0.01},${coordinates.longitude-0.05}\r\n      &markers=color:0xe87d7d%7Clabel:2%7C${coordinates.latitude},${coordinates.longitude-0.1}\r\n      &markers=color:0xffa1a2%7Clabel:3%7C${coordinates.latitude-0.06},${coordinates.longitude-0.1}\r\n      &markers=color:0xFFB0B1%7Clabel:4%7C${coordinates.latitude-0.1},${coordinates.longitude}\r\n      &key=AIzaSyDu4BYAiI5YwgKcxGaoPxElCcbQZSy1OK8`} alt=\"Your Location on Google Maps\" />\r\n      :\r\n      <img src={`https://maps.googleapis.com/maps/api/staticmap?&zoom=11&size=512x512&maptype=roadmap\\\r\n      &markers=size:small%7Ccolor:blue%7C${coordinates.latitude-0.01},${coordinates.longitude-0.02}\r\n      &key=AIzaSyDu4BYAiI5YwgKcxGaoPxElCcbQZSy1OK8`}\r\n      alt=\"Your Location on Google Maps\" />\r\n      }\r\n    </div>\r\n  );\r\n}\r\nexport default App;","C:\\Users\\Amanda Yu\\Documents\\VS Code Projects\\hospital-locations\\src\\reportWebVitals.js",[],{"ruleId":"25","severity":1,"message":"26","line":40,"column":6,"nodeType":"27","endLine":40,"endColumn":19,"suggestions":"28"},{"ruleId":"29","severity":1,"message":"30","line":114,"column":9,"nodeType":"31","messageId":"32","endLine":114,"endColumn":28},{"ruleId":"29","severity":1,"message":"33","line":133,"column":10,"nodeType":"31","messageId":"32","endLine":133,"endColumn":14},{"ruleId":"29","severity":1,"message":"34","line":133,"column":16,"nodeType":"31","messageId":"32","endLine":133,"endColumn":23},{"ruleId":"29","severity":1,"message":"35","line":137,"column":10,"nodeType":"31","messageId":"32","endLine":137,"endColumn":14},{"ruleId":"29","severity":1,"message":"36","line":137,"column":16,"nodeType":"31","messageId":"32","endLine":137,"endColumn":23},{"ruleId":"29","severity":1,"message":"37","line":141,"column":10,"nodeType":"31","messageId":"32","endLine":141,"endColumn":14},{"ruleId":"29","severity":1,"message":"38","line":141,"column":16,"nodeType":"31","messageId":"32","endLine":141,"endColumn":23},{"ruleId":"29","severity":1,"message":"39","line":145,"column":10,"nodeType":"31","messageId":"32","endLine":145,"endColumn":14},{"ruleId":"29","severity":1,"message":"40","line":145,"column":16,"nodeType":"31","messageId":"32","endLine":145,"endColumn":23},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserAddress'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-unused-vars","'handelLocationError' is assigned a value but never used.","Identifier","unusedVar","'loc1' is assigned a value but never used.","'setLoc1' is assigned a value but never used.","'loc2' is assigned a value but never used.","'setLoc2' is assigned a value but never used.","'loc3' is assigned a value but never used.","'setLoc3' is assigned a value but never used.","'loc4' is assigned a value but never used.","'setLoc4' is assigned a value but never used.",{"desc":"42","fix":"43"},"Update the dependencies array to be: [coordinates, getUserAddress]",{"range":"44","text":"45"},[1128,1141],"[coordinates, getUserAddress]"]
=======
[{"C:\\Users\\Rakshita\\Desktop\\hospital-locations\\src\\App.js":"1"},{"size":6737,"mtime":1610875853389,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1jne4fc","C:\\Users\\Rakshita\\Desktop\\hospital-locations\\src\\App.js",["6"],{"ruleId":null,"fatal":true,"severity":2,"message":"7","line":159,"column":2},"Parsing error: Unexpected token\n\n  157 |       <p>Latitude: {coordinates.latitude}</p>\n  158 |       <p>Longitude: {coordinates.longitude}</p>\n> 159 | <<<<<<< HEAD\n      |  ^\n  160 |       <h4>Google Maps Geocoding</h4>\n  161 |       <p>Address: {isAddressVisible ? userAddress : \"\"}</p>\n  162 |       <img class=\"location\" src={`https://maps.googleapis.com/maps/api/staticmap?&zoom=11&size=512x512&maptype=roadmap\\"]
>>>>>>> 68f14273add7fc0b935e90afeb85e5d6ac0980c4
